##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration

upstream app_server {
    server unix:/var/log/alima.sock fail_timeout=0;
}


server {
    listen 80 default_server;

    server_name localhost 127.0.0.1;

    keepalive_timeout 70;
    client_max_body_size 4G;

    access_log /etc/nginx/logs/nginx-access.log;
    error_log /etc/nginx/logs/nginx-error.log;

    location /static/ {
            alias /apps/alimregistration/alimregoui/build/static/;
        }

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri @proxy_to_app;
    }


    location @proxy_to_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_connect_timeout 90;
        proxy_read_timeout 90;
            proxy_redirect off;
        proxy_pass http://app_server;
        }
}
